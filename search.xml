<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[vim]]></title>
    <url>%2F2019%2F11%2F09%2Fvim%2F</url>
    <content type="text"><![CDATA[知识点 居中 zz: 当前行居中 zt: 当前行居屏幕顶端 zb: 当前行居屏幕底端 屏幕整体移动 c-y: 向上一行 c-e: 向下一行 sites zhihu-vim .nvimrc123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110&quot;########## general settings ##########set nuset cursorlineset smartcaseset ignorecaseset showmatchset clipboard+=unnamedplusset so=10&quot;set list&quot;set listchars=tab:&gt;~,trail:.&quot;########## indentation s##########set shiftwidth=4set softtabstop=4set tabstop=4set expandtabset breakindentset smartindentset nofoldenableset colorcolumn=80set foldmethod=manualfiletype plugin on&quot;########## plugins s##########call plug#begin(&apos;~/.vim/plugged&apos;)&quot;Plug &apos;flomotlik/vim-livereload&apos;&quot;Plug &apos;jaxbot/browserlink.vim&apos;&quot;Plug &apos;Yggdroot/indentLine&apos;Plug &apos;mileszs/ack.vim&apos;if executable(&apos;ag&apos;) let g:ackprg = &apos;ag --vimgrep&apos;endif&quot;command Todo Ack! &apos;TODO|FIXME|CHANGED|BUG|HACK&apos;&quot;command Debug Ack! &apos;NOTE|INFO|IDEA&apos;Plug &apos;Konfekt/vim-alias&apos;Plug &apos;tpope/vim-vinegar&apos;Plug &apos;ap/vim-buftabline&apos;Plug &apos;tpope/vim-commentary&apos;call plug#end()&quot;&quot;########## auto commands s##########&quot;&quot;&quot;&quot;&quot;########## custom mappings s##########&quot;let g:mapleader=&quot;\&lt;Space&gt;&quot;imap &lt;A-j&gt; &lt;Esc&gt;jimap &lt;A-k&gt; &lt;Esc&gt;kimap &lt;A-h&gt; &lt;Esc&gt;himap &lt;A-l&gt; &lt;Esc&gt;lmap &lt;C-n&gt; :bn&lt;CR&gt;map &lt;C-m&gt; :bp&lt;CR&gt;au BufWinLeave * silent! mkviewau BufWinEnter * silent! loadviewmap &lt;Up&gt; &lt;C-y&gt;map &lt;Down&gt; &lt;C-e&gt;map g1 1gtmap g2 2gtnoremap &lt;C-u&gt; :1b&lt;CR&gt;noremap &lt;C-i&gt; :2b&lt;CR&gt;noremap &lt;C-o&gt; :3b&lt;CR&gt;noremap &lt;C-p&gt; :4b&lt;CR&gt;&quot;noremap &lt;C-n&gt; :silent! tabnew&lt;CR&gt;map :conf :source $MYVIMRC&lt;CR&gt;let g:netrw_liststyle = 3let g:netrw_banner = 0function! MakeSession() let b:sessiondir = $HOME . &quot;/.vim/sessions&quot; . getcwd() if (filewritable(b:sessiondir) != 2) exe &apos;silent !mkdir -p &apos; b:sessiondir redraw! endif let b:filename = b:sessiondir . &apos;/session.vim&apos; exe &quot;mksession! &quot; . b:filenameendfunctionfunction! LoadSession() let b:sessiondir = $HOME . &quot;/.vim/sessions&quot; . getcwd() let b:sessionfile = b:sessiondir . &quot;/session.vim&quot; if (filereadable(b:sessionfile)) exe &apos;source &apos; b:sessionfile else echo &quot;No session loaded.&quot; endifendfunction&quot; Adding automatons for when entering or leaving Vim&quot;au VimEnter * nested :call LoadSession()&quot;au VimLeave * :call MakeSession()]]></content>
      <categories>
        <category>tech</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[linux]]></title>
    <url>%2F2019%2F11%2F09%2Flinux%2F</url>
    <content type="text"><![CDATA[tools curl xargs echo char pictures cowsay fortune xkill xdotool ranger find: find path filter actionfind / -type f -name &quot;*.log&quot; | xargs grep &quot;ERROR&quot; 查找文件内容find / -type f -name &quot;*.log&quot; | xargs grep &quot;ERROR&quot; date 格式化输出: date &quot;%Y-%m-%d&quot;]]></content>
      <categories>
        <category>tech</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[adb]]></title>
    <url>%2F2019%2F11%2F09%2Fadb%2F</url>
    <content type="text"><![CDATA[123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139#!/bin/bashlogin()&#123; adb shell input keyevent 223 # close screen sleep 1 adb shell input keyevent 223 # close screen sleep 1 adb shell input keyevent 223 # close screen sleep 1 adb shell input keyevent 223 # close screen sleep 1 adb shell input keyevent 224 # open screen sleep 1 adb shell input keyevent SPACE sleep 1 adb shell input text 1111 sleep 1 adb shell input keyevent HOME # enter home sleep 1 adb shell input keyevent MENU # enter process manage sleep 1 adb shell input tap 550 2000 # erase all sleep 3 adb shell input tap 650 200 # enter bili sleep 8 adb shell input tap 270 270 sleep 1 adb shell input tap 50 100 # sidebar sleep 1 adb shell input tap 120 2100 # setting sleep 1 adb shell input swipe 500 1000 500 500 # scroll to bottom sleep 1 adb shell input tap 500 2050 # exit sleep 1 adb shell input keyevent TAB sleep 1 adb shell input keyevent TAB sleep 1 adb shell input keyevent ENTER sleep 1 adb shell input keyevent SEARCH sleep 1 adb shell input text av25618330 # enter av numbere sleep 1 adb shell input keyevent ENTER # enter video sleep 10 adb shell input tap 950 1100 # click share button sleep 1 adb shell input tap 110 1500 # share to bili sleep 1 adb shell input text $1 # enter account sleep 1 adb shell input tap 500 1200 # hide autocomplete sleep 1 adb shell input tap 500 750 # click passwd input sleep 1 adb shell input text 123zxcbl # enter passwd sleep 1 adb shell input tap 800 900 # click login sleep 1 adb shell input text $(/home/gkxk/repo/bin/funwords) # enter passwd sleep 5 adb shell input tap 1000 150 # click publish sleep 1 adb shell input keyevent HOME # enter home sleep 1 adb shell input keyevent MENU # enter process manage sleep 1 adb shell input tap 550 2000 # erase all sleep 3 adb shell input tap 650 200 # enter bili sleep 8 adb shell input tap 270 270 sleep 1 adb shell input tap 50 100 # sidebar sleep 1 adb shell input tap 150 700 # enter personal space sleep 10 adb shell input tap 1000 1000 # manage blog sleep 1 adb shell input tap 500 1900 # delete sleep 1 adb shell input keyevent TAB sleep 1 adb shell input keyevent TAB sleep 1 adb shell input keyevent ENTER sleep 1 adb shell input keyevent HOME # enter home sleep 1 adb shell input keyevent MENU # enter process manage sleep 1 adb shell input tap 550 2000 # erase all sleep 3 adb shell input keyevent 223 # close screen sleep 1&#125;curday=`date +%Y-%m-%d`logday=`tail /home/gkxk/repo/bin/.bpoint.txt -n 1`if [ $curday = $logday ];then echo equalelif [ `adb devices|wc -l` = 3 ];then echo $curday &gt;&gt; /home/gkxk/repo/bin/.bpoint.txt login 1860 login 1860 echo $curday &gt;&gt; /home/gkxk/repo/bin/.bpoint.txtfi written by gkxk at 2019-09-21 00:28 keyevent list12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485860 --&gt; &quot;KEYCODE_UNKNOWN&quot; 1 --&gt; &quot;KEYCODE_MENU&quot; 2 --&gt; &quot;KEYCODE_SOFT_RIGHT&quot; 3 --&gt; &quot;KEYCODE_HOME&quot; 4 --&gt; &quot;KEYCODE_BACK&quot; 5 --&gt; &quot;KEYCODE_CALL&quot; 6 --&gt; &quot;KEYCODE_ENDCALL&quot; 7 --&gt; &quot;KEYCODE_0&quot; 8 --&gt; &quot;KEYCODE_1&quot; 9 --&gt; &quot;KEYCODE_2&quot; 10 --&gt; &quot;KEYCODE_3&quot; 11 --&gt; &quot;KEYCODE_4&quot; 12 --&gt; &quot;KEYCODE_5&quot; 13 --&gt; &quot;KEYCODE_6&quot; 14 --&gt; &quot;KEYCODE_7&quot; 15 --&gt; &quot;KEYCODE_8&quot; 16 --&gt; &quot;KEYCODE_9&quot; 17 --&gt; &quot;KEYCODE_STAR&quot; 18 --&gt; &quot;KEYCODE_POUND&quot; 19 --&gt; &quot;KEYCODE_DPAD_UP&quot; 20 --&gt; &quot;KEYCODE_DPAD_DOWN&quot; 21 --&gt; &quot;KEYCODE_DPAD_LEFT&quot; 22 --&gt; &quot;KEYCODE_DPAD_RIGHT&quot; 23 --&gt; &quot;KEYCODE_DPAD_CENTER&quot; 24 --&gt; &quot;KEYCODE_VOLUME_UP&quot; 25 --&gt; &quot;KEYCODE_VOLUME_DOWN&quot; 26 --&gt; &quot;KEYCODE_POWER&quot; 27 --&gt; &quot;KEYCODE_CAMERA&quot; 28 --&gt; &quot;KEYCODE_CLEAR&quot; 29 --&gt; &quot;KEYCODE_A&quot; 30 --&gt; &quot;KEYCODE_B&quot; 31 --&gt; &quot;KEYCODE_C&quot; 32 --&gt; &quot;KEYCODE_D&quot; 33 --&gt; &quot;KEYCODE_E&quot; 34 --&gt; &quot;KEYCODE_F&quot; 35 --&gt; &quot;KEYCODE_G&quot; 36 --&gt; &quot;KEYCODE_H&quot; 37 --&gt; &quot;KEYCODE_I&quot; 38 --&gt; &quot;KEYCODE_J&quot; 39 --&gt; &quot;KEYCODE_K&quot; 40 --&gt; &quot;KEYCODE_L&quot; 41 --&gt; &quot;KEYCODE_M&quot; 42 --&gt; &quot;KEYCODE_N&quot; 43 --&gt; &quot;KEYCODE_O&quot; 44 --&gt; &quot;KEYCODE_P&quot; 45 --&gt; &quot;KEYCODE_Q&quot; 46 --&gt; &quot;KEYCODE_R&quot; 47 --&gt; &quot;KEYCODE_S&quot; 48 --&gt; &quot;KEYCODE_T&quot; 49 --&gt; &quot;KEYCODE_U&quot; 50 --&gt; &quot;KEYCODE_V&quot; 51 --&gt; &quot;KEYCODE_W&quot; 52 --&gt; &quot;KEYCODE_X&quot; 53 --&gt; &quot;KEYCODE_Y&quot; 54 --&gt; &quot;KEYCODE_Z&quot; 55 --&gt; &quot;KEYCODE_COMMA&quot; 56 --&gt; &quot;KEYCODE_PERIOD&quot; 57 --&gt; &quot;KEYCODE_ALT_LEFT&quot; 58 --&gt; &quot;KEYCODE_ALT_RIGHT&quot; 59 --&gt; &quot;KEYCODE_SHIFT_LEFT&quot; 60 --&gt; &quot;KEYCODE_SHIFT_RIGHT&quot; 61 --&gt; &quot;KEYCODE_TAB&quot; 62 --&gt; &quot;KEYCODE_SPACE&quot; 63 --&gt; &quot;KEYCODE_SYM&quot; 64 --&gt; &quot;KEYCODE_EXPLORER&quot; 65 --&gt; &quot;KEYCODE_ENVELOPE&quot; 66 --&gt; &quot;KEYCODE_ENTER&quot; 67 --&gt; &quot;KEYCODE_DEL&quot; 68 --&gt; &quot;KEYCODE_GRAVE&quot; 69 --&gt; &quot;KEYCODE_MINUS&quot; 70 --&gt; &quot;KEYCODE_EQUALS&quot; 71 --&gt; &quot;KEYCODE_LEFT_BRACKET&quot; 72 --&gt; &quot;KEYCODE_RIGHT_BRACKET&quot; 73 --&gt; &quot;KEYCODE_BACKSLASH&quot; 74 --&gt; &quot;KEYCODE_SEMICOLON&quot; 75 --&gt; &quot;KEYCODE_APOSTROPHE&quot; 76 --&gt; &quot;KEYCODE_SLASH&quot; 77 --&gt; &quot;KEYCODE_AT&quot; 78 --&gt; &quot;KEYCODE_NUM&quot; 79 --&gt; &quot;KEYCODE_HEADSETHOOK&quot; 80 --&gt; &quot;KEYCODE_FOCUS&quot; 81 --&gt; &quot;KEYCODE_PLUS&quot; 82 --&gt; &quot;KEYCODE_MENU&quot; 83 --&gt; &quot;KEYCODE_NOTIFICATION&quot; 84 --&gt; &quot;KEYCODE_SEARCH&quot; 85 --&gt; &quot;TAG_LAST_KEYCODE&quot;]]></content>
      <categories>
        <category>tech</category>
      </categories>
  </entry>
</search>
